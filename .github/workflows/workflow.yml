name: Colcon Test and Coverage

on:
  pull_request:
    branches:
      - dev
      - pre-release
      - release

jobs:
  build:
    runs-on: self-hosted

    steps:

    - name: Setup Docker Container 
      run: | 
        docker pull ros:humble

    - name: Prepare Docker container
      run: |
        docker rm -f ros-container || true
        docker run --name ros-container -i -d ros:humble bash
        docker exec -i ros-container /bin/bash

    - name: Run commands inside Docker Container
      run: |
        docker exec -i ros-container sudo apt-get update && sudo apt-get install -y nlohmann-json3-dev && sudo apt-get install -y python3-pip && pip install setuptools==58.2.0
        docker exec -i ros-container git clone --recursive --branch dev https://github.com/THI-Drone/thi-drone-ws.git
        docker exec -i ros-container cd thi-drone-ws/src/demo_package_py && git checkout ${{ github.head_ref }}
        docker exec -i ros-container source /opt/ros/humble/setup.bash
        docker exec -i ros-container cd thi-drone-ws/ && sudo rosdep fix-permissions && rosdep update && rosdep install --from-paths src --ignore-src -y
        docker exec -i ros-container cd thi-drone-ws/src/demo_package_py && colcon build --symlink-install && colcon test && colcon test-result --all

    - name: Copy logs from container to workspace
      if: failure()
      run: |
        docker cp ros-container:/thi-drone-ws/src/demo_package_py/log ./log
    
    - name: Upload build-logs
      uses: actions/upload-artifact@main
      if: failure()
      with:
        name: build-logs
        path: ./log


