name: Colcon Test and Coverage

on:
  push:
    branches:
      - dev
      - pre-release
      - release
  pull_request:
    branches:
      - dev
      - pre-release
      - release

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with: 
        path: src/demo_package_py

    - name: Checkout Dependency repository
      uses: actions/checkout@v2
      with:
        repository: THI-Drone/common_package_py
        token: ${{ secrets.GITHUB_TOKEN }}
        path: src/common_package_py
        branch: dev

    - name: Install dependencies
      run: sudo apt update && sudo apt install -y python3-pip && pip install colcon-common-extensions   

    - name: Setup ROS Environment
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: humble

    - name: ros2 build
      uses: ros-tooling/action-ros-ci@v0.3
      with:
        package-name: demo_package_py
        import-token: ${{ secrets.GITHUB_TOKEN }}
        target-ros2-distro: humble
      
    #- name: Setup Python
    #  uses: actions/setup-python@v2
    #  with:
    #    python-version: '3.10'
    #    
    #- name: Install dependencies
    #  run: |
    #    sudo apt update
    #    sudo apt-get install -y python3-pip
    #    pip install setuptools==58.2.0
    #    pip install colcon-common-extensions


    #- name: Build
    #  run: |
    #    colcon build
    
    - name: Upload build-logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: build-logs
        path: ./log

    #- name: Upload build artifacts
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: build-artifacts
    #    path: ./install/*



  #test:
  #  needs: build
  #  runs-on: ubuntu-22.04

  #  steps:
  #  - name: Checkout repository
  #    uses: actions/checkout@v2
  #    
  #  - name: Download build artifacts
  #    uses: actions/download-artifact@v2
  #    with:
  #      name: build-artifacts
  #      path: ./install

  #  - name: Setup Python
  #    uses: actions/setup-python@v2
  #    with:
  #      python-version: '3.10'
        
  #  - name: Install dependencies
  #    run: |
  #      sudo apt update
  #      sudo apt-get install -y python3-pip
  #      pip install --upgrade pip
  #      pip install setuptools==58.2.0
  #      pip install colcon-common-extensions
  #      pip install ament-copyright
  #      pip install ament-flake8
  #      pip install ament-pep257


  #  - name:  Test
  #    run: |
  #      ls -la
  #      ls -la ./install
  #      ls -la ./install/demo_package_py
  #      colcon test

  #  - name: Upload test-logs
  #    uses: actions/upload-artifact@v2
  #    if: failure()
  #    with:
  #      name: test-logs
  #      path: ./log


    #- name: Generate Coverage Report
    #  run: |
    #    colcon test \
    #      --packages-select <demo_package_py> \
    #      --event-handlers console_direct+ \
    #      --return-code-on-test-failure \
    #      --pytest-args "--cov=<demo_package_py>" \
    #      --pytest-args "--cov-report=xml"
      
   # - name: Upload Coverage Report
   #   uses: actions/upload-artifact@v2
   #   with:
   #     name: coverage-report
   #     path: .coverage.xml
